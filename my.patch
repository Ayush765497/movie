diff --git a/__pycache__/application.cpython-35.pyc b/__pycache__/application.cpython-35.pyc
new file mode 100644
index 0000000..21ac10f
Binary files /dev/null and b/__pycache__/application.cpython-35.pyc differ
diff --git a/application.py b/application.py
index 0ce0ac8..8acac81 100644
--- a/application.py
+++ b/application.py
@@ -3,8 +3,19 @@ import os
 from flask import Flask, request, session, g, redirect, url_for, abort, \
      render_template, flash
 import pandas as pd
+from flask_sqlalchemy import SQLAlchemy
+import psycopg2
 
 
+if 'RDS_HOSTNAME' in os.environ:
+    POSTGRES_USER = os.environ['RDS_USERNAME']
+
+    POSTGRES_PW = os.environ['RDS_PASSWORD']
+
+    POSTGRES_URL ="aa17r6yquq9zgm3.cidcmcwt0iep.us-west-2.rds.amazonaws.com:5432"
+
+    POSTGRES_DB = os.environ['RDS_DB_NAME']
+
 
 application = Flask(__name__) # create the application instance :)
 application.config.from_object(__name__) # load config from this file , flaskr.py
@@ -14,11 +25,13 @@ application.config.from_object(__name__) # load config from this file , flaskr.p
 
 
 
-data = pd.read_csv("result.csv")
-#data.to_csv("result.csv")
-#print(data)
+
+#DB_URL = 'postgresql+psycopg2://{user}:{pw}@{url}/{db}'.format(user=POSTGRES_USER,pw=POSTGRES_PW,url=POSTGRES_URL,db=POSTGRES_DB)
+
+#application.config['SQLALCHEMY_DATABASE_URI'] = DB_URL
+
 def out_similar(movieid):
-    #print(movieid)
+    '''get similar movie and related infos of the searched object; return none for exception'''
     try:
         result = data.loc[data['0'] == movieid]
         for i in result.iterrows():
@@ -32,48 +45,36 @@ def out_similar(movieid):
     except:
         return 0
 
-'''
-@application.route('/')
-def main():
-    with open('movielist','r') as f:
-        movies = f.read().split('\n')
-    return render_template('home.html',movieList = movies)
-
-
-@application.route('/movie', methods=['GET', 'POST'])
-def searchMovie():
-    error = None
-    if request.method == 'POST':
-        movieid = request.form['search']
-        result = out_similar(movieid)
-        print(result)
-        if result == None:
-            return render_template('404.html')
-        return render_template('mainpage.html', movieList=result)
-    return render_template('mainpage.html', movieList=out_similar("The Dark Knight Rises"))
-
-'''
 @application.route('/', methods=['GET', 'POST'])
 def searchMovie():
+    '''searchMovie main page function'''
     error = None
     if request.method == 'POST':
         movieid = request.form['search']
         result = out_similar(movieid)
        # print(result)
         if result == None:
+            
             return render_template('404.html')
         return render_template('mainpage.html', movieList=result)
     return render_template('mainpage.html', movieList=out_similar("The Dark Knight Rises"))
 
 @application.route('/contact')
 def contact():
+    '''contact page function'''
     return render_template('contact.html')
 
 @application.route('/resume')
 def resume():
+    '''resume page function'''
     return render_template('resume.html')
 
 if __name__ == "__main__":
+    data = pd.read_csv("result.csv")
+  #  from sqlalchemy import create_engine
+   # engine = create_engine(DB_URL)
+    #data.to_sql(name='result', con = engine, if_exists = 'append', index=False)
+    #data2 = pd.read_sql_query('select * from result',con=engine)
     # Setting debug to True enables debug output. This line should be
     # removed before deploying a production app.
     application.debug = True
diff --git a/requirements.txt b/requirements.txt
index 1b37f48..205643e 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,11 +1,14 @@
 click==6.7
 Flask==0.12.2
+Flask-SQLAlchemy==2.3.2
 itsdangerous==0.24
 Jinja2==2.10
 MarkupSafe==1.0
 numpy==1.14.0
 pandas==0.22.0
+psycopg2==2.7.4
 python-dateutil==2.6.1
 pytz==2018.3
 six==1.11.0
+SQLAlchemy==1.2.4
 Werkzeug==0.14.1
